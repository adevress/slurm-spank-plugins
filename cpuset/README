
INTRODUCTION

The SLURM 'cpuset' plugin uses Linux cpusets to constrain jobs to
the number of CPUs they have been allocated on nodes. The plugin is
specifically designed for sytems sharing nodes and using CPU scheduling
(i.e. using the select/cons_res plugin). The plugin will not work on
systems where CPUs are oversubscribed to jobs (i.e.  strict node sharing
without the use of select/cons_res).

The plugin uses SLURM's spank framework, and thus it is enabled by adding
the following line to /etc/slurm/plugstack.conf:

 required  cpuset.so  [options]

where options [options] may be supplied to tune module behavior. 

The plugin may also constrain job steps to their own cpusets under
the job cpuset. This may be useful when running multiple job steps
under a single allocation, as the resources of each job step may
be partitioned into separate job steps. This functionality is enabled
by the srun user option

 --use-cpusets=[args...]

Use of the --use-cpusets option for job steps is described below.


REQUIREMENTS

The cpuset plugin of course requires cpuset support. It also uses the
libbitmask and libcpuset libraries from SGI for creating and managing
cpusets. Source for these libraries are available at

 http://oss.sgi.com/projects/cpusets/

The cpuset filesystem must also be mounted at runtime in order for
the plugin to be able to query and create cpusets. To mount the cpuset
filesystem, use:

 mount -t cpuset none /dev/cpuset

The plugin currently assumes that the cpuset filesystem will be available
under /dev/cpuset.

Included with the cpuset plugin source is a cpusets "release
agent" (release-agent.c) which may optionally be installed as
/sbin/cpuset_release_agent on any nodes using the SLURM cpuset plugin.
This release agent will be run for each SLURM cpuset when the last task
within the cpuset exits, and will free the cpuset immediately (with
proper locking so as not to race with other jobs). This release agent
is optional for a couple reasons:

 1. In the current version of Linux for which this plugin was written
    (RHEL5), there can only be one release-agent system-wide. We don't 
    want to interfere with other uses of cpusets if they exist.

 2. The cpuset plugin removes stale cpusets at startup anyway. So,
    the cpuset_release_agent is not a critical component. However,
    it is nice to clean up job cpusets as the jobs exit, instead of 
    waiting until the *next* job is run. Unused cpusets lying around
    may be confusing to users and sysadmins. 

  
MAN PAGES

This file is out of date. For up-to-date information see the
man pages provided with this software: slurm-cpuset(8), 
use-cpusets(1), and pam_slurm_cpuset(8).

$Id: README 7653 2008-07-29 22:33:31Z grondo $
